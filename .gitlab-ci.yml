variables:
  IMAGE_NAME: egistry.gitlab.com/info-finance-2025/info-finance-website
  IMAGE_TAG_DEV: dev
  IMAGE_TAG_PROD: prod

stages:
  - build_dev
  - build_prod
  - deploy_dev
  - deploy_prod

.build_dev:
  stage: build_dev
  image: docker:latest
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: '/certs'
  before_script:
    - docker login registry.gitlab.com -u $REGISTRY_USER -p $REGISTRY_PASS
    - echo "$ENV_DEV" > ".env.local"
    - echo "$AWS_EXPORT_DEV" > "./src/aws-exports.js"
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG_DEV .
    - docker push $IMAGE_NAME:$IMAGE_TAG_DEV

build_dev:
  extends: .build_dev
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev" && $CI_COMMIT_MESSAGE =~ /(build|all)/i'

.build_prod:
  stage: build_prod
  image: docker:latest
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: '/certs'
  before_script:
    - docker login registry.gitlab.com -u $REGISTRY_USER -p $REGISTRY_PASS
    - echo "$ENV_PROD" > ".env.local"
    - echo "$AWS_EXPORT_PROD" > "./src/aws-exports.js"
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG_PROD .
    - docker push $IMAGE_NAME:$IMAGE_TAG_PROD

build_prod:
  extends: .build_prod
  rules:
    - if: '$CI_COMMIT_BRANCH == "prod" && $CI_COMMIT_MESSAGE =~ /(build|all)/i'

.deploy_dev:
  stage: deploy_dev
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client wget gnupg -y )'
    - wget -qO- https://get.docker.com/gpg | apt-key add -
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY_DEV" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - touch ~/.ssh/config
    - touch ~/.ssh/known_hosts
    - chmod -R 400 ~/.ssh
    - ssh-keyscan $SERVER_DEV_IP >> ~/.ssh/known_hosts
    - '[[ -f /.dockerinit ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh -o StrictHostKeyChecking=no $SERVER_DEV_USER@$SERVER_DEV_IP "
      cd info_finance_docker_service &&
      docker --config ~/.info-finance-website pull $IMAGE_NAME:$IMAGE_TAG_DEV &&
      docker-compose up info_finance_website -d"

deploy_dev:
  extends: .deploy_dev
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev" && $CI_COMMIT_MESSAGE =~ /(deploy|all)/i'

.deploy_prod:
  stage: deploy_prod
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client wget gnupg -y )'
    - wget -qO- https://get.docker.com/gpg | apt-key add -
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY_PROD" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - touch ~/.ssh/config
    - touch ~/.ssh/known_hosts
    - chmod -R 400 ~/.ssh
    - ssh-keyscan $SERVER_PROD_IP >> ~/.ssh/known_hosts
    - '[[ -f /.dockerinit ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh -o StrictHostKeyChecking=no $SERVER_PROD_USER@$SERVER_PROD_IP "
      cd info_finance_docker_service &&
      docker login registry.gitlab.com -u $REGISTRY_USER -p $REGISTRY_PASS &&
      docker pull $IMAGE_NAME:$IMAGE_TAG_PROD &&
      docker-compose up info_finance_website -d &&
      docker image prune -f"

deploy_prod:
  extends: .deploy_prod
  rules:
    - if: '$CI_COMMIT_BRANCH == "prod" && $CI_COMMIT_MESSAGE =~ /(deploy|all)/i'
